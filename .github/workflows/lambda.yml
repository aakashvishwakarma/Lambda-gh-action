name: CI

# Controls when the workflow will run
on:
  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:
    inputs:
      infra_env:
        description: "Role ARN"
        required: true
        default: ''
       
# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  build:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v2

      # Runs a single command using the runners shell
      - name: Set up Python
        uses: actions/setup-python@v2
        with:
            python-version: '3.6'
      # Runs a set of commands using the runners shell
      - name: Configure AWS credentials from Production account
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: us-east-1
      # Role creation usng AWS CLI either we can use this way to zip our file and use it's zip output in aws cli for creation of lambda
#       - name: create zip   
#         run: |
#           zip -r lambda_function.zip lambda_function.py
      - name: Create lambda Function
        run: |
            aws lambda create-function \
            --function-name my-function \
            --runtime python3.6 \
            --zip-file fileb://lambda_function.zip \
            --handler lambda_function.lambda_handler \
            --role arn:aws:iam::242307434447:role/Test-Role          
          
